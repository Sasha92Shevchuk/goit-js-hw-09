{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,kBACjCE,EAASH,SAASC,cAAc,iBAChCG,EAAWJ,SAASC,cAAc,mBAEpCI,EAAa,KACbC,EAAY,KACZC,EAAS,KAsBb,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACXC,YAAW,WACrBN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBL,E,IA7BPN,EAAOmB,iBAAiB,UAExB,SAAsBC,GACpBA,EAAEC,iBACFf,EAAagB,OAAOnB,EAAQoB,OAC5BhB,EAAYe,OAAOlB,EAAOmB,OAC1Bf,EAASc,OAAOjB,EAASkB,OAEzB,IAAK,IAAIC,EAAI,EAAGA,GAAKhB,EAAQgB,GAAK,EAChCf,EAAce,EAAGlB,GACdmB,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MACjBb,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,M,IAE9DmB,OAAM,SAAAJ,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MAClBb,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,M,IAE9DL,GAAcC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nlet firstDelay = null;\nlet delayStep = null;\nlet amount = null;\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  firstDelay = Number(delayEl.value);\n  delayStep = Number(stepEl.value);\n  amount = Number(amountEl.value);\n  // console.log(firstDelay, delayStep, amount);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    firstDelay += delayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    const timerId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, firstDelay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","Number","value","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.bf5b9138.js.map"}